/* SPDX-License-Identifier: GPL-2.0 */
BPF_SCHED_HOOK(int, 0, cfs_check_preempt_tick, struct sched_entity *curr, unsigned long delta_exec)
BPF_SCHED_HOOK(int, 0, cfs_check_preempt_wakeup, struct task_struct *curr, struct task_struct *p)
BPF_SCHED_HOOK(int, 0, cfs_wakeup_preempt_entity, struct sched_entity *curr, struct sched_entity *se)
BPF_SCHED_HOOK(int, 0, cfs_vcpu_capacity, void)
BPF_SCHED_HOOK(int, 0, cfs_sched_tick_end,struct rq *rq,u64 now_time,unsigned int num_of_idle)
BPF_SCHED_HOOK(int, 0, cfs_get_polling_amount,struct rq *rq)
BPF_SCHED_HOOK(int, 0, cfs_select_run_cpu_spin,struct rq *rq,struct task_struct *curr,u64 now_time,int average_capacity)
BPF_SCHED_HOOK(int, 0, cfs_select_run_cpu,struct rq *rq, struct rq *select_rq,u64 now_time,int max)
BPF_SCHED_HOOK(int, 0, cfs_should_spinlock,int test)
BPF_SCHED_HOOK(int, 0, cfs_latency_select,int prev,struct task_struct *curr,struct cpumask *idle_cpus,unsigned long util_min,unsigned long util_max)
BPF_SCHED_HOOK(int, 0, cfs_should_bias,int test)
BPF_SCHED_HOOK(int, 0, cfs_latency_profile,int cpu,u64 now_time)
BPF_SCHED_HOOK(int, 0, cfs_correct_migration,int test)
BPF_SCHED_HOOK(int, 0, cfs_spin_len,int test)
